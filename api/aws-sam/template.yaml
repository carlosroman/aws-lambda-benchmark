---
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >
  This template deploys an API gateway with the lambdas attached to it

Globals:
  Function:
    MemorySize: 256
    Timeout: 25
    Tracing: Active
    Environment:
      Variables:
        TABLE_NAME: !Ref table
        REGIOM: !Sub ${AWS::Region}

Resources:

  table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}
      KeySchema:
      - AttributeName: Artist
        KeyType: HASH # Partition key
      - AttributeName: 'SongTitle'
        KeyType: RANGE # Sort key
      AttributeDefinitions:
      - AttributeName: Artist
        AttributeType: S
      - AttributeName: SongTitle
        AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  golang:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-golang
      Description: Golang implementation of function
      Handler: main
      CodeUri: ../../lambdas/golang/target
      Runtime: go1.x
      Policies:
      - AWSXrayWriteOnlyAccess # Managed Policy
      - Statement:
        - Sid: AllowDynamoDBReadOnly # TODO: move to own Policy to share between Lambdas
          Effect: Allow
          Action:
          - dynamodb:BatchGetItem
          - dynamodb:DescribeTable
          - dynamodb:GetItem
          - dynamodb:Scan
          - dynamodb:Query
          Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${table}'
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /golang
            Method: post
